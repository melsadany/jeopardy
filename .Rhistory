pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
ggsave("figs/jeopardata/corr_residualized-facial-areas-and-avg_score.png", bg="white",
width = 14, height = 20, units = "in", dpi=360)
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
filter(avg_score < 30000) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
areas %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
areas %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
hist(meta$avg_score)
hist(meta$avg_score, breaks = 50)
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="loess") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
View(areas)
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
pivot_longer(cols = c(starts_with("A_"), -"A_M_R", -"A_M_L"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value")
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = rowSums(A_MR, A_ML))
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = rowSums(A_M_R, A_M_L))
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L))
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")
pivot_longer(cols = c(starts_with("A_")), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = c(spid))
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = c(spid))
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = c(spid))
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = c(JPID))
View(areas)
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area))
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% dplyr::summarise(value = mean(value, na.rm = T))
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% dplyr::summarise(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = JPID)
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(A_M_R, A_M_L)) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% dplyr::summarise(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = JPID) %>%
full_join(meta) %>%
drop_na() %>%
distinct(name, .keep_all = T)
# corr of age/sex/others with facial areas
df2 <- inner_join(areas,
inner_join(guess.avg,
guess %>% select(JPID=ID2, smiling, teeth, eyes, dress)))
df2 %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
ggplot(aes(x=avg_age, y=value)) +
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
facet_wrap("area", scales = "free")
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622")))
View(areas)
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = sum(as.numeric(A_M_R),as.numeric(A_M_L)))
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = A_M_R+A_M_L)
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = A_M_R+A_M_L) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% dplyr::summarise(value = mean(value, na.rm = T)) %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = JPID) %>%
full_join(meta) %>%
drop_na() %>%
distinct(name, .keep_all = T)
# corr of age/sex/others with facial areas
df2 <- inner_join(areas,
inner_join(guess.avg,
guess %>% select(JPID=ID2, smiling, teeth, eyes, dress)))
df2 %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
ggplot(aes(x=avg_age, y=value)) +
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
facet_wrap("area", scales = "free")
ggsave("figs/jeopardata/corr-of-judged-age-w-face-areas.png", bg="white",
width = 10, height = 10, units = "in", dpi=360)
df2 %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = c("smiling", "teeth", "eyes", "dress", "avg_eth", "avg_w", "sex"), names_to = "var2", values_to = "val2") %>%
mutate(val2 = toupper(val2)) %>%
ggplot(aes(x=val2, y=value)) +
geom_violin() + geom_boxplot(fill="white", width=0.2) +
ggpubr::stat_compare_means(color="red")+
ggh4x::facet_grid2(rows = vars(area), cols = vars(var2), scales = "free", axes = T, remove_labels = T)
df2 %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
pivot_longer(cols = c("smiling", "teeth", "eyes", "dress", "avg_eth", "avg_w", "sex"), names_to = "var2", values_to = "val2") %>%
mutate(val2 = toupper(val2)) %>%
ggplot(aes(x=val2, y=value, fill = val2)) +
geom_violin() + geom_boxplot(fill="white", width=0.2) +
ggpubr::stat_compare_means(color="red")+
ggh4x::facet_grid2(rows = vars(area), cols = vars(var2), scales = "free", axes = T, remove_labels = T)
ggsave("figs/jeopardata/corr-of-judgements-w-face-areas.png", bg="white",
width = 12, height = 19, units = "in", dpi=360)
df2 %>%
pivot_longer(cols = c("smiling", "teeth", "eyes", "dress", "dress", "avg_eth", "avg_w", "sex"), names_to = "var2", values_to = "val2") %>%
mutate(val2 = toupper(val2)) %>%
group_by(var2, val2) %>%
dplyr::summarise(count=n()) %>%
ggplot(aes(x=val2, y=count))+
geom_bar(stat = "identity")+
facet_wrap(~var2, scales = "free")
ggsave("figs/jeopardata/dist-of-judgements.png", bg="white",
width = 8, height = 8, units = "in", dpi=360)
################################################################################
################################################################################
################################################################################
# correct for age, sex, interaction, eth, weight, smiling, teeth
res.areas <- cbind(JPID= df2$JPID,
apply(df2 %>% select(starts_with("A_")), MARGIN = 2, FUN = function(x) {
residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w,
data = cbind(df2 %>% select(avg_age,sex,avg_eth,avg_w,smiling,teeth,eyes) %>%
mutate(sex = as.factor(sex)),
y = x)))
}) %>%
as.data.frame())
df2$JPID
apply(df2 %>% select(starts_with("A_")), MARGIN = 2, FUN = function(x) {
residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w,
data = cbind(df2 %>% select(avg_age,sex,avg_eth,avg_w,smiling,teeth,eyes) %>%
mutate(sex = as.factor(sex)),
y = x)))
})
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = A_M_R+A_M_L) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% dplyr::summarise(value = mean(value, na.rm = T)) %>% ungroup() %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = JPID) %>%
full_join(meta) %>%
drop_na() %>%
distinct(name, .keep_all = T)
# corr of age/sex/others with facial areas
df2 <- inner_join(areas,
inner_join(guess.avg,
guess %>% select(JPID=ID2, smiling, teeth, eyes, dress)))
################################################################################
################################################################################
################################################################################
# correct for age, sex, interaction, eth, weight, smiling, teeth
res.areas <- cbind(JPID= df2$JPID,
apply(df2 %>% select(starts_with("A_")), MARGIN = 2, FUN = function(x) {
residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w,
data = cbind(df2 %>% select(avg_age,sex,avg_eth,avg_w,smiling,teeth,eyes) %>%
mutate(sex = as.factor(sex)),
y = x)))
}) %>%
as.data.frame())
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="loess") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
ggsave("figs/jeopardata/corr_residualized-facial-areas-and-avg_score.png", bg="white",
width = 14, height = 20, units = "in", dpi=360)
areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
View(res.areas)
################################################################################
################################################################################
# get facial areas
areas <- read_csv("data/derivatives/jeopardata/facial.areas.csv") %>%
select(JPID, starts_with("A_")) %>% # only keep distances of int
mutate(JPID = sub("\\.png", "", JPID)) %>%
filter(!(JPID %in% c("JD0886", "JD0405]", "JD0700", "JD0622"))) %>%
mutate(A_M = A_M_R+A_M_L) %>% select(-"A_M_R", -"A_M_L")%>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% dplyr::summarise(value = mean(value, na.rm = T)) %>% ungroup() %>%
pivot_wider(names_from = "area", values_from = "value", id_cols = JPID) %>%
full_join(meta) %>%
drop_na() %>%
distinct(name, .keep_all = T)
# corr of age/sex/others with facial areas
df2 <- inner_join(areas,
inner_join(guess.avg,
guess %>% select(JPID=ID2, smiling, teeth, eyes, dress)))
df2 %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
ggplot(aes(x=avg_age, y=value)) +
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
facet_wrap("area", scales = "free")
ggsave("figs/jeopardata/corr-of-judged-age-w-face-areas.png", bg="white",
width = 10, height = 10, units = "in", dpi=360)
################################################################################
################################################################################
################################################################################
# correct for age, sex, interaction, eth, weight, smiling, teeth
res.areas <- cbind(JPID= df2$JPID,
apply(df2 %>% select(starts_with("A_")), MARGIN = 2, FUN = function(x) {
residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w,
data = cbind(df2 %>% select(avg_age,sex,avg_eth,avg_w,smiling,teeth,eyes) %>%
mutate(sex = as.factor(sex)),
y = x)))
}) %>%
as.data.frame())
# corr res areas with avg_score
res.areas %>%
left_join(meta) %>%
# filter(avg_score > 100) %>%
pivot_longer(cols = starts_with("A_"), names_to = "area") %>%
# mutate(area = sub("_[R|L]", "", area)) %>% group_by(JPID, area) %>% mutate(value = mean(value, na.rm = T)) %>%
pivot_longer(cols = colnames(meta)[2:6], names_to = "avg_measure", values_to = "avg") %>%
ggplot(aes(x=avg, y=value))+
geom_point()+
geom_smooth(method="lm") +
ggpubr::stat_cor(color="red") +
ggh4x::facet_grid2(cols = vars(avg_measure), rows = vars(area), scales = "free")+
theme(strip.text.y.right = element_text(angle = 0))+
labs(caption = paste0("areas were residualized:", "\n",
"   residuals(glm(y ~ avg_age + sex + avg_age:sex + avg_eth + avg_w + smiling + teeth + eyes))"))
ggsave("figs/jeopardata/corr_residualized-facial-areas-and-avg_score.png", bg="white",
width = 14, height = 20, units = "in", dpi=360)
################################################################################
#                         extract facial landmarks and features                #
################################################################################
rm(list = ls())
gc()
source("/Dedicated/jmichaelson-wdata/msmuhammad/msmuhammad-source.R")
################################################################################
################################################################################
project.dir <- "/Dedicated/jmichaelson-wdata/msmuhammad/projects/jeopardy"
################################################################################
################################################################################
# run the python script to process these files
py.sc <- "/Dedicated/jmichaelson-wdata/msmuhammad/workbench/customized-functions/facial_coords.py"
cmd <- paste("python3", py.sc,
"--dir_path", "/Dedicated/jmichaelson-wdata/msmuhammad/data/jeopardy/jeopardata/clean2",
sep = " ")
cmd
system(cmd)
